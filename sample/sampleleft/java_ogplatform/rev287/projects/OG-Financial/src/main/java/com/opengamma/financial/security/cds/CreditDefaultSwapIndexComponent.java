/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 * 
 * Please see distribution for license.
 */
package com.opengamma.financial.security.cds;

import org.joda.beans.BeanDefinition;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBean;

import com.opengamma.id.ExternalId;
import com.opengamma.id.ExternalIdBundle;
import java.util.Map;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

/**
 * Represents a member of a Credit Default Swap Index
 */
@BeanDefinition
public class CreditDefaultSwapIndexComponent extends DirectBean {
  /**
   * The obligor red code identifier
   */
  @PropertyDefinition(validate = "notNull")
  private ExternalId _obligorRedCode;
  /**
   * The weight
   */
  @PropertyDefinition(validate = "notNull")
  private Double _weight;
  /**
   * The bond identifier bundle;
   */
  @PropertyDefinition
  private ExternalIdBundle _bondID;
  
  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code CreditDefaultSwapIndexComponent}.
   * @return the meta-bean, not null
   */
  public static CreditDefaultSwapIndexComponent.Meta meta() {
    return CreditDefaultSwapIndexComponent.Meta.INSTANCE;
  }
  static {
    JodaBeanUtils.registerMetaBean(CreditDefaultSwapIndexComponent.Meta.INSTANCE);
  }

  @Override
  public CreditDefaultSwapIndexComponent.Meta metaBean() {
    return CreditDefaultSwapIndexComponent.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 122314948:  // obligorRedCode
        return getObligorRedCode();
      case -791592328:  // weight
        return getWeight();
      case -1383424226:  // bondID
        return getBondID();
    }
    return super.propertyGet(propertyName, quiet);
  }

  @Override
  protected void propertySet(String propertyName, Object newValue, boolean quiet) {
    switch (propertyName.hashCode()) {
      case 122314948:  // obligorRedCode
        setObligorRedCode((ExternalId) newValue);
        return;
      case -791592328:  // weight
        setWeight((Double) newValue);
        return;
      case -1383424226:  // bondID
        setBondID((ExternalIdBundle) newValue);
        return;
    }
    super.propertySet(propertyName, newValue, quiet);
  }

  @Override
  protected void validate() {
    JodaBeanUtils.notNull(_obligorRedCode, "obligorRedCode");
    JodaBeanUtils.notNull(_weight, "weight");
    super.validate();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      CreditDefaultSwapIndexComponent other = (CreditDefaultSwapIndexComponent) obj;
      return JodaBeanUtils.equal(getObligorRedCode(), other.getObligorRedCode()) &&
          JodaBeanUtils.equal(getWeight(), other.getWeight()) &&
          JodaBeanUtils.equal(getBondID(), other.getBondID());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash += hash * 31 + JodaBeanUtils.hashCode(getObligorRedCode());
    hash += hash * 31 + JodaBeanUtils.hashCode(getWeight());
    hash += hash * 31 + JodaBeanUtils.hashCode(getBondID());
    return hash;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the obligor red code identifier
   * @return the value of the property, not null
   */
  public ExternalId getObligorRedCode() {
    return _obligorRedCode;
  }

  /**
   * Sets the obligor red code identifier
   * @param obligorRedCode  the new value of the property, not null
   */
  public void setObligorRedCode(ExternalId obligorRedCode) {
    JodaBeanUtils.notNull(obligorRedCode, "obligorRedCode");
    this._obligorRedCode = obligorRedCode;
  }

  /**
   * Gets the the {@code obligorRedCode} property.
   * @return the property, not null
   */
  public final Property<ExternalId> obligorRedCode() {
    return metaBean().obligorRedCode().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the weight
   * @return the value of the property, not null
   */
  public Double getWeight() {
    return _weight;
  }

  /**
   * Sets the weight
   * @param weight  the new value of the property, not null
   */
  public void setWeight(Double weight) {
    JodaBeanUtils.notNull(weight, "weight");
    this._weight = weight;
  }

  /**
   * Gets the the {@code weight} property.
   * @return the property, not null
   */
  public final Property<Double> weight() {
    return metaBean().weight().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the bond identifier bundle;
   * @return the value of the property
   */
  public ExternalIdBundle getBondID() {
    return _bondID;
  }

  /**
   * Sets the bond identifier bundle;
   * @param bondID  the new value of the property
   */
  public void setBondID(ExternalIdBundle bondID) {
    this._bondID = bondID;
  }

  /**
   * Gets the the {@code bondID} property.
   * @return the property, not null
   */
  public final Property<ExternalIdBundle> bondID() {
    return metaBean().bondID().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code CreditDefaultSwapIndexComponent}.
   */
  public static class Meta extends DirectMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code obligorRedCode} property.
     */
    private final MetaProperty<ExternalId> _obligorRedCode = DirectMetaProperty.ofReadWrite(
        this, "obligorRedCode", CreditDefaultSwapIndexComponent.class, ExternalId.class);
    /**
     * The meta-property for the {@code weight} property.
     */
    private final MetaProperty<Double> _weight = DirectMetaProperty.ofReadWrite(
        this, "weight", CreditDefaultSwapIndexComponent.class, Double.class);
    /**
     * The meta-property for the {@code bondID} property.
     */
    private final MetaProperty<ExternalIdBundle> _bondID = DirectMetaProperty.ofReadWrite(
        this, "bondID", CreditDefaultSwapIndexComponent.class, ExternalIdBundle.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, null,
        "obligorRedCode",
        "weight",
        "bondID");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 122314948:  // obligorRedCode
          return _obligorRedCode;
        case -791592328:  // weight
          return _weight;
        case -1383424226:  // bondID
          return _bondID;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends CreditDefaultSwapIndexComponent> builder() {
      return new DirectBeanBuilder<CreditDefaultSwapIndexComponent>(new CreditDefaultSwapIndexComponent());
    }

    @Override
    public Class<? extends CreditDefaultSwapIndexComponent> beanType() {
      return CreditDefaultSwapIndexComponent.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code obligorRedCode} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ExternalId> obligorRedCode() {
      return _obligorRedCode;
    }

    /**
     * The meta-property for the {@code weight} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Double> weight() {
      return _weight;
    }

    /**
     * The meta-property for the {@code bondID} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<ExternalIdBundle> bondID() {
      return _bondID;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
