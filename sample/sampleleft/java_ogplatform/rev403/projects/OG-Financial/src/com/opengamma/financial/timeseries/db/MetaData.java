/**
 * Copyright (C) 2009 - 2010 by OpenGamma Inc.
 *
 * Please see distribution for license.
 */
package com.opengamma.financial.timeseries.db;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

import org.joda.beans.BeanDefinition;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.BasicMetaBean;
import org.joda.beans.impl.direct.DirectBean;
import org.joda.beans.impl.direct.DirectMetaProperty;

import com.opengamma.id.IdentifierBundle;

/**
 * TimeSeriesMetaData holds meta data info for TimeSeries in the data store for internal use.
 */
@BeanDefinition
/*package*/ class MetaData<T> extends DirectBean {

  /**
   * The time series db id.
   */
  @PropertyDefinition
  private Long _timeSeriesId;
  /**
   * The identifier bundle id.
   */
  @PropertyDefinition
  private Long _identifierBundleId;
  /**
   * The data store.
   */
  @PropertyDefinition
  private String _dataSource;
  /**
   * The data provider.
   */
  @PropertyDefinition
  private String _dataProvider;
  /**
   * The data field.
   */
  @PropertyDefinition
  private String _dataField;
  /**
   * The observation time.
   */
  @PropertyDefinition
  private String _observationTime;
  /**
   * The identifier bundle.
   */
  @PropertyDefinition
  private IdentifierBundle _identifiers;
  /**
   * The start date.
   */
  @PropertyDefinition
  private T _earliestDate;
  /**
   * The end date.
   */
  @PropertyDefinition
  private T _latestDate;

  /**
   * Creates an instance.
   */
  public MetaData() {
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code MetaData<T>}.
   * @param <R>  the bean's generic type
   * @return the meta-bean, not null
   */
  @SuppressWarnings("unchecked")
  public static <R> MetaData.Meta<R> meta() {
    return MetaData.Meta.INSTANCE;
  }

  @SuppressWarnings("unchecked")
  @Override
  public MetaData.Meta<T> metaBean() {
    return MetaData.Meta.INSTANCE;
  }

  @Override
  protected Object propertyGet(String propertyName) {
    switch (propertyName.hashCode()) {
      case 1709694943:  // timeSeriesId
        return getTimeSeriesId();
      case 704215302:  // identifierBundleId
        return getIdentifierBundleId();
      case 1272470629:  // dataSource
        return getDataSource();
      case 339742651:  // dataProvider
        return getDataProvider();
      case -386794640:  // dataField
        return getDataField();
      case 951232793:  // observationTime
        return getObservationTime();
      case 1368189162:  // identifiers
        return getIdentifiers();
      case 239226785:  // earliestDate
        return getEarliestDate();
      case -125315115:  // latestDate
        return getLatestDate();
    }
    return super.propertyGet(propertyName);
  }

  @SuppressWarnings("unchecked")
  @Override
  protected void propertySet(String propertyName, Object newValue) {
    switch (propertyName.hashCode()) {
      case 1709694943:  // timeSeriesId
        setTimeSeriesId((Long) newValue);
        return;
      case 704215302:  // identifierBundleId
        setIdentifierBundleId((Long) newValue);
        return;
      case 1272470629:  // dataSource
        setDataSource((String) newValue);
        return;
      case 339742651:  // dataProvider
        setDataProvider((String) newValue);
        return;
      case -386794640:  // dataField
        setDataField((String) newValue);
        return;
      case 951232793:  // observationTime
        setObservationTime((String) newValue);
        return;
      case 1368189162:  // identifiers
        setIdentifiers((IdentifierBundle) newValue);
        return;
      case 239226785:  // earliestDate
        setEarliestDate((T) newValue);
        return;
      case -125315115:  // latestDate
        setLatestDate((T) newValue);
        return;
    }
    super.propertySet(propertyName, newValue);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the time series db id.
   * @return the value of the property
   */
  public Long getTimeSeriesId() {
    return _timeSeriesId;
  }

  /**
   * Sets the time series db id.
   * @param timeSeriesId  the new value of the property
   */
  public void setTimeSeriesId(Long timeSeriesId) {
    this._timeSeriesId = timeSeriesId;
  }

  /**
   * Gets the the {@code timeSeriesId} property.
   * @return the property, not null
   */
  public final Property<Long> timeSeriesId() {
    return metaBean().timeSeriesId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the identifier bundle id.
   * @return the value of the property
   */
  public Long getIdentifierBundleId() {
    return _identifierBundleId;
  }

  /**
   * Sets the identifier bundle id.
   * @param identifierBundleId  the new value of the property
   */
  public void setIdentifierBundleId(Long identifierBundleId) {
    this._identifierBundleId = identifierBundleId;
  }

  /**
   * Gets the the {@code identifierBundleId} property.
   * @return the property, not null
   */
  public final Property<Long> identifierBundleId() {
    return metaBean().identifierBundleId().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the data store.
   * @return the value of the property
   */
  public String getDataSource() {
    return _dataSource;
  }

  /**
   * Sets the data store.
   * @param dataSource  the new value of the property
   */
  public void setDataSource(String dataSource) {
    this._dataSource = dataSource;
  }

  /**
   * Gets the the {@code dataSource} property.
   * @return the property, not null
   */
  public final Property<String> dataSource() {
    return metaBean().dataSource().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the data provider.
   * @return the value of the property
   */
  public String getDataProvider() {
    return _dataProvider;
  }

  /**
   * Sets the data provider.
   * @param dataProvider  the new value of the property
   */
  public void setDataProvider(String dataProvider) {
    this._dataProvider = dataProvider;
  }

  /**
   * Gets the the {@code dataProvider} property.
   * @return the property, not null
   */
  public final Property<String> dataProvider() {
    return metaBean().dataProvider().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the data field.
   * @return the value of the property
   */
  public String getDataField() {
    return _dataField;
  }

  /**
   * Sets the data field.
   * @param dataField  the new value of the property
   */
  public void setDataField(String dataField) {
    this._dataField = dataField;
  }

  /**
   * Gets the the {@code dataField} property.
   * @return the property, not null
   */
  public final Property<String> dataField() {
    return metaBean().dataField().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the observation time.
   * @return the value of the property
   */
  public String getObservationTime() {
    return _observationTime;
  }

  /**
   * Sets the observation time.
   * @param observationTime  the new value of the property
   */
  public void setObservationTime(String observationTime) {
    this._observationTime = observationTime;
  }

  /**
   * Gets the the {@code observationTime} property.
   * @return the property, not null
   */
  public final Property<String> observationTime() {
    return metaBean().observationTime().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the identifier bundle.
   * @return the value of the property
   */
  public IdentifierBundle getIdentifiers() {
    return _identifiers;
  }

  /**
   * Sets the identifier bundle.
   * @param identifiers  the new value of the property
   */
  public void setIdentifiers(IdentifierBundle identifiers) {
    this._identifiers = identifiers;
  }

  /**
   * Gets the the {@code identifiers} property.
   * @return the property, not null
   */
  public final Property<IdentifierBundle> identifiers() {
    return metaBean().identifiers().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the start date.
   * @return the value of the property
   */
  public T getEarliestDate() {
    return _earliestDate;
  }

  /**
   * Sets the start date.
   * @param earliestDate  the new value of the property
   */
  public void setEarliestDate(T earliestDate) {
    this._earliestDate = earliestDate;
  }

  /**
   * Gets the the {@code earliestDate} property.
   * @return the property, not null
   */
  public final Property<T> earliestDate() {
    return metaBean().earliestDate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the end date.
   * @return the value of the property
   */
  public T getLatestDate() {
    return _latestDate;
  }

  /**
   * Sets the end date.
   * @param latestDate  the new value of the property
   */
  public void setLatestDate(T latestDate) {
    this._latestDate = latestDate;
  }

  /**
   * Gets the the {@code latestDate} property.
   * @return the property, not null
   */
  public final Property<T> latestDate() {
    return metaBean().latestDate().createProperty(this);
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code MetaData}.
   */
  public static class Meta<T> extends BasicMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    @SuppressWarnings("rawtypes")
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code timeSeriesId} property.
     */
    private final MetaProperty<Long> _timeSeriesId = DirectMetaProperty.ofReadWrite(this, "timeSeriesId", Long.class);
    /**
     * The meta-property for the {@code identifierBundleId} property.
     */
    private final MetaProperty<Long> _identifierBundleId = DirectMetaProperty.ofReadWrite(this, "identifierBundleId", Long.class);
    /**
     * The meta-property for the {@code dataSource} property.
     */
    private final MetaProperty<String> _dataSource = DirectMetaProperty.ofReadWrite(this, "dataSource", String.class);
    /**
     * The meta-property for the {@code dataProvider} property.
     */
    private final MetaProperty<String> _dataProvider = DirectMetaProperty.ofReadWrite(this, "dataProvider", String.class);
    /**
     * The meta-property for the {@code dataField} property.
     */
    private final MetaProperty<String> _dataField = DirectMetaProperty.ofReadWrite(this, "dataField", String.class);
    /**
     * The meta-property for the {@code observationTime} property.
     */
    private final MetaProperty<String> _observationTime = DirectMetaProperty.ofReadWrite(this, "observationTime", String.class);
    /**
     * The meta-property for the {@code identifiers} property.
     */
    private final MetaProperty<IdentifierBundle> _identifiers = DirectMetaProperty.ofReadWrite(this, "identifiers", IdentifierBundle.class);
    /**
     * The meta-property for the {@code earliestDate} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<T> _earliestDate = (DirectMetaProperty) DirectMetaProperty.ofReadWrite(this, "earliestDate", Object.class);
    /**
     * The meta-property for the {@code latestDate} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<T> _latestDate = (DirectMetaProperty) DirectMetaProperty.ofReadWrite(this, "latestDate", Object.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<Object>> _map;

    @SuppressWarnings({"unchecked", "rawtypes" })
    protected Meta() {
      LinkedHashMap temp = new LinkedHashMap();
      temp.put("timeSeriesId", _timeSeriesId);
      temp.put("identifierBundleId", _identifierBundleId);
      temp.put("dataSource", _dataSource);
      temp.put("dataProvider", _dataProvider);
      temp.put("dataField", _dataField);
      temp.put("observationTime", _observationTime);
      temp.put("identifiers", _identifiers);
      temp.put("earliestDate", _earliestDate);
      temp.put("latestDate", _latestDate);
      _map = Collections.unmodifiableMap(temp);
    }

    @Override
    public MetaData<T> createBean() {
      return new MetaData<T>();
    }

    @SuppressWarnings({"unchecked", "rawtypes" })
    @Override
    public Class<? extends MetaData<T>> beanType() {
      return (Class) MetaData.class;
    }

    @Override
    public Map<String, MetaProperty<Object>> metaPropertyMap() {
      return _map;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code timeSeriesId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Long> timeSeriesId() {
      return _timeSeriesId;
    }

    /**
     * The meta-property for the {@code identifierBundleId} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<Long> identifierBundleId() {
      return _identifierBundleId;
    }

    /**
     * The meta-property for the {@code dataSource} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> dataSource() {
      return _dataSource;
    }

    /**
     * The meta-property for the {@code dataProvider} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> dataProvider() {
      return _dataProvider;
    }

    /**
     * The meta-property for the {@code dataField} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> dataField() {
      return _dataField;
    }

    /**
     * The meta-property for the {@code observationTime} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<String> observationTime() {
      return _observationTime;
    }

    /**
     * The meta-property for the {@code identifiers} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<IdentifierBundle> identifiers() {
      return _identifiers;
    }

    /**
     * The meta-property for the {@code earliestDate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<T> earliestDate() {
      return _earliestDate;
    }

    /**
     * The meta-property for the {@code latestDate} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<T> latestDate() {
      return _latestDate;
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
